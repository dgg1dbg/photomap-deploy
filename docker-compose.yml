version: '3.8'

services:
  backend:
    build: ./backend
    env_file:
      - .env
    container_name: backend
    expose:
      - "8000"
    depends_on:
      - db
      - redis

  frontend:
    build: ./frontend
    env_file:
      - .env
    container_name: frontend
    expose:
      - "3000"
    depends_on:
      - backend

  nginx:
    image: nginx:stable
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/deploy.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./backend/static:/app/static
      - ./backend/media:/app/media
    depends_on:
      - backend
      - frontend

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    command: celery -A photomap worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
    env_file:
      - .env 

volumes:
  pgdata:
